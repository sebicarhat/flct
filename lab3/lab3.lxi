%{
#include "Utile.h"
%}

%option noyywrap
DIGIT     [0-9]
NZ_DIGIT  [1-9]
ZERO      [0]
INTEGER   {NZ_DIGIT}+{DIGIT}*|{ZERO}
ID_FIRST  [a-zA-Z]
ID_END    [a-zA-Z0-9_]
CHAR	  "'"[^\n]"'"
STRING    [\"][^\n]*[\"]




%%
{DIGIT}+              addInt(atoi(yytext));
{DIGIT}+"."{DIGIT}*   addFloat(atof(yytext));
{CHAR}+			      addString(yytext);
{STRING}+			  addString(yytext);

\identifier           addPIF(0,0);
\chars                addPIF(1,0);
\ints			      addPIF(2,0);
\floats				  addPIF(3,0);
char                  addPIF(4,0);
int                   addPIF(5,0);
void                  addPIF(6,0);
bool                  addPIF(7,0);
string                addPIF(8,0);
for                   addPIF(9,0);
while                 addPIF(10,0);
if                	  addPIF(11,0);
else                  addPIF(12,0);
\;                    addPIF(13,0);
\,                    addPIF(14,0);
\.                    addPIF(15,0);
\+                    addPIF(16,0);
\-                    addPIF(17,0);
\*                    addPIF(18,0);
\(                    addPIF(19,0);
\)                    addPIF(20,0);
\[                    addPIF(21,0);
\]                    addPIF(22,0);
\{                    addPIF(23,0);
\}                    addPIF(24,0);
\<                    addPIF(25,0);
\>                    addPIF(26,0);
\=                    addPIF(27,0);
\!                    addPIF(28,0);
\/                    addPIF(29,0);
cin>>                 addPIF(30,0);
cout<<                addPIF(31,0);
return                addPIF(32,0);
main                  addPIF(33,0);

{ID_FIRST}{ID_END}*   addIdentifier(yytext);

[ \t\n]+          ;/* remove whitespaces */
. {
  if(yytext[0] != 13){
  printf("ERROR: Illegal token %s at line %d !\n",yytext, ++yylineno);
  }
}
%%
int main (int argc,char **argv)
{
  ++argv;--argc;
  if( argc > 0)
    yyin = fopen(argv[0],"r");
  else
    yyin = stdin;
  yylex();
  show();
}